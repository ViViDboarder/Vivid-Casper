{"version":3,"sources":["jquery.fitvids.js","gallery-card.js","infinite-scroll.js","prism.js","sticky-nav-title.js"],"names":["$","fn","fitVids","options","head","div","settings","customSelector","ignore","document","getElementById","getElementsByTagName","createElement","innerHTML","appendChild","childNodes","extend","this","each","selectors","push","ignoreList","$allVideos","find","join","not","aspectRatio","videoName","$this","parents","length","tagName","toLowerCase","parent","css","isNaN","attr","parseInt","height","width","_count","wrap","removeAttr","window","jQuery","Zepto","addEventListener","querySelectorAll","forEach","image","container","closest","ratio","attributes","value","style","flex","feedElement","buffer","ticking","loading","lastScrollY","lastWindowHeight","lastDocumentHeight","nextElement","querySelector","onPageLoad","status","removeEventListener","onScroll","onResize","response","item","importNode","resNextElement","href","documentElement","scrollHeight","onUpdate","xhr","XMLHttpRequest","responseType","open","send","requestTick","requestAnimationFrame","scrollY","innerHeight","passive","_self","WorkerGlobalScope","self","Prism","e","t","n","manual","disableWorkerMessageHandler","util","encode","r","type","content","alias","map","replace","Object","prototype","toString","call","match","objId","__id","defineProperty","clone","a","i","hasOwnProperty","languages","insertBefore","arguments","l","o","s","DFS","plugins","highlightAll","highlightAllUnder","callback","selector","hooks","run","elements","highlightElement","test","className","parentNode","nodeName","g","u","element","language","grammar","code","textContent","Worker","filename","onmessage","highlightedCode","data","postMessage","JSON","stringify","immediateClose","highlight","tokenize","matchGrammar","Token","c","v","h","f","inside","d","lookbehind","m","greedy","p","y","pattern","global","RegExp","source","b","k","w","lastIndex","j","_","exec","P","index","A","x","O","I","slice","N","S","C","E","Array","splice","apply","rest","all","add","tag","classes","keys","parse","close","currentScript","pop","src","hasAttribute","readyState","setTimeout","module","exports","markup","comment","prolog","doctype","cdata","punctuation","namespace","attr-value","attr-name","entity","title","xml","html","mathml","svg","clike","string","class-name","keyword","boolean","function","number","operator","javascript","regex","function-variable","template-string","interpolation","interpolation-punctuation","script","js","macro","directive","constant","variable","bash","shebang","shell","cpp","raw-string","csharp","generic-method","preprocessor","dotnet","ruby","delimiter","symbol","builtin","docker","dockerfile","go","json","property","null","jsonp","makefile","markdown","blockquote","hr","list","url-reference","bold","italic","url","properties","python","triple-quoted-string","vim","yaml","scalar","key","datetime","important","Casper","stickyNavTitle","nav","navSelector","titleSelector","update","getBoundingClientRect","top","offsetHeight","classList","activeClass","remove"],"mappings":"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","file":"casper.js","sourcesContent":["/*jshint browser:true */\n/*!\n* FitVids 1.3\n*\n*\n* Copyright 2017, Chris Coyier + Dave Rupert + Ghost Foundation\n* This is an unofficial release, ported by John O'Nolan\n* Credit to Thierry Koblentz - http://www.alistapart.com/articles/creating-intrinsic-ratios-for-video/\n* Released under the MIT license\n*\n*/\n\n;(function( $ ){\n\n  'use strict';\n\n  $.fn.fitVids = function( options ) {\n    var settings = {\n      customSelector: null,\n      ignore: null\n    };\n\n    if(!document.getElementById('fit-vids-style')) {\n      // appendStyles: https://github.com/toddmotto/fluidvids/blob/master/dist/fluidvids.js\n      var head = document.head || document.getElementsByTagName('head')[0];\n      var css = '.fluid-width-video-container{flex-grow: 1;width:100%;}.fluid-width-video-wrapper{width:100%;position:relative;padding:0;}.fluid-width-video-wrapper iframe,.fluid-width-video-wrapper object,.fluid-width-video-wrapper embed {position:absolute;top:0;left:0;width:100%;height:100%;}';\n      var div = document.createElement(\"div\");\n      div.innerHTML = '<p>x</p><style id=\"fit-vids-style\">' + css + '</style>';\n      head.appendChild(div.childNodes[1]);\n    }\n\n    if ( options ) {\n      $.extend( settings, options );\n    }\n\n    return this.each(function(){\n      var selectors = [\n        'iframe[src*=\"player.vimeo.com\"]',\n        'iframe[src*=\"youtube.com\"]',\n        'iframe[src*=\"youtube-nocookie.com\"]',\n        'iframe[src*=\"kickstarter.com\"][src*=\"video.html\"]',\n        'object',\n        'embed'\n      ];\n\n      if (settings.customSelector) {\n        selectors.push(settings.customSelector);\n      }\n\n      var ignoreList = '.fitvidsignore';\n\n      if(settings.ignore) {\n        ignoreList = ignoreList + ', ' + settings.ignore;\n      }\n\n      var $allVideos = $(this).find(selectors.join(','));\n      $allVideos = $allVideos.not('object object'); // SwfObj conflict patch\n      $allVideos = $allVideos.not(ignoreList); // Disable FitVids on this video.\n\n      $allVideos.each(function(){\n        var $this = $(this);\n        if($this.parents(ignoreList).length > 0) {\n          return; // Disable FitVids on this video.\n        }\n        if (this.tagName.toLowerCase() === 'embed' && $this.parent('object').length || $this.parent('.fluid-width-video-wrapper').length) { return; }\n        if ((!$this.css('height') && !$this.css('width')) && (isNaN($this.attr('height')) || isNaN($this.attr('width'))))\n        {\n          $this.attr('height', 9);\n          $this.attr('width', 16);\n        }\n        var height = ( this.tagName.toLowerCase() === 'object' || ($this.attr('height') && !isNaN(parseInt($this.attr('height'), 10))) ) ? parseInt($this.attr('height'), 10) : $this.height(),\n            width = !isNaN(parseInt($this.attr('width'), 10)) ? parseInt($this.attr('width'), 10) : $this.width(),\n            aspectRatio = height / width;\n        if(!$this.attr('name')){\n          var videoName = 'fitvid' + $.fn.fitVids._count;\n          $this.attr('name', videoName);\n          $.fn.fitVids._count++;\n        }\n        $this.wrap('<div class=\"fluid-width-video-container\"><div class=\"fluid-width-video-wrapper\"></div></div>').parent('.fluid-width-video-wrapper').css('padding-top', (aspectRatio * 100)+'%');\n        $this.removeAttr('height').removeAttr('width');\n      });\n    });\n  };\n\n  // Internal counter for unique video names.\n  $.fn.fitVids._count = 0;\n\n// Works with either jQuery or Zepto\n})( window.jQuery || window.Zepto );\n","/* eslint-env browser */\n\n/**\n * Gallery card support\n * Used on any individual post/page\n *\n * Detects when a gallery card has been used and applies sizing to make sure\n * the display matches what is seen in the editor.\n */\n\n(function (window, document) {\n    var resizeImagesInGalleries = function resizeImagesInGalleries() {\n        var images = document.querySelectorAll('.kg-gallery-image img');\n        images.forEach(function (image) {\n            var container = image.closest('.kg-gallery-image');\n            var width = image.attributes.width.value;\n            var height = image.attributes.height.value;\n            var ratio = width / height;\n            container.style.flex = ratio + ' 1 0%';\n        });\n    };\n\n    document.addEventListener('DOMContentLoaded', resizeImagesInGalleries);\n})(window, document);\n","/* eslint-env browser */\n\n/**\n * Infinite Scroll\n * Used on all pages where there is a list of posts (homepage, tag index, etc).\n *\n * When the page is scrolled to 300px from the bottom, the next page of posts\n * is fetched by following the the <link rel=\"next\" href=\"...\"> that is output\n * by {{ghost_head}}.\n *\n * The individual post items are extracted from the fetched pages by looking for\n * a wrapper element with the class \"post-card\". Any found elements are appended\n * to the element with the class \"post-feed\" in the currently viewed page.\n */\n\n(function (window, document) {\n    // next link element\n    var nextElement = document.querySelector('link[rel=next]');\n    if (!nextElement) {\n        return;\n    }\n\n    // post feed element\n    var feedElement = document.querySelector('.post-feed');\n    if (!feedElement) {\n        return;\n    }\n\n    var buffer = 300;\n\n    var ticking = false;\n    var loading = false;\n\n    var lastScrollY = window.scrollY;\n    var lastWindowHeight = window.innerHeight;\n    var lastDocumentHeight = document.documentElement.scrollHeight;\n\n    function onPageLoad() {\n        if (this.status === 404) {\n            window.removeEventListener('scroll', onScroll);\n            window.removeEventListener('resize', onResize);\n            return;\n        }\n\n        // append contents\n        var postElements = this.response.querySelectorAll('.post-card');\n        postElements.forEach(function (item) {\n            // document.importNode is important, without it the item's owner\n            // document will be different which can break resizing of\n            // `object-fit: cover` images in Safari\n            feedElement.appendChild(document.importNode(item, true));\n        });\n\n        // set next link\n        var resNextElement = this.response.querySelector('link[rel=next]');\n        if (resNextElement) {\n            nextElement.href = resNextElement.href;\n        } else {\n            window.removeEventListener('scroll', onScroll);\n            window.removeEventListener('resize', onResize);\n        }\n\n        // sync status\n        lastDocumentHeight = document.documentElement.scrollHeight;\n        ticking = false;\n        loading = false;\n    }\n\n    function onUpdate() {\n        // return if already loading\n        if (loading) {\n            return;\n        }\n\n        // return if not scroll to the bottom\n        if (lastScrollY + lastWindowHeight <= lastDocumentHeight - buffer) {\n            ticking = false;\n            return;\n        }\n\n        loading = true;\n\n        var xhr = new window.XMLHttpRequest();\n        xhr.responseType = 'document';\n\n        xhr.addEventListener('load', onPageLoad);\n\n        xhr.open('GET', nextElement.href);\n        xhr.send(null);\n    }\n\n    function requestTick() {\n        ticking || window.requestAnimationFrame(onUpdate);\n        ticking = true;\n    }\n\n    function onScroll() {\n        lastScrollY = window.scrollY;\n        requestTick();\n    }\n\n    function onResize() {\n        lastWindowHeight = window.innerHeight;\n        lastDocumentHeight = document.documentElement.scrollHeight;\n        requestTick();\n    }\n\n    window.addEventListener('scroll', onScroll, {passive: true});\n    window.addEventListener('resize', onResize);\n\n    requestTick();\n})(window, document);\n","/* PrismJS 1.12.2\nhttp://prismjs.com/download.html#themes=prism-okaidia&languages=markup+clike+javascript+c+bash+cpp+csharp+ruby+docker+go+json+makefile+markdown+properties+python+vim+yaml */\nvar _self=\"undefined\"!=typeof window?window:\"undefined\"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?self:{},Prism=function(){var e=/\\blang(?:uage)?-(\\w+)\\b/i,t=0,n=_self.Prism={manual:_self.Prism&&_self.Prism.manual,disableWorkerMessageHandler:_self.Prism&&_self.Prism.disableWorkerMessageHandler,util:{encode:function(e){return e instanceof r?new r(e.type,n.util.encode(e.content),e.alias):\"Array\"===n.util.type(e)?e.map(n.util.encode):e.replace(/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/\\u00a0/g,\" \")},type:function(e){return Object.prototype.toString.call(e).match(/\\[object (\\w+)\\]/)[1]},objId:function(e){return e.__id||Object.defineProperty(e,\"__id\",{value:++t}),e.__id},clone:function(e,t){var r=n.util.type(e);switch(t=t||{},r){case\"Object\":if(t[n.util.objId(e)])return t[n.util.objId(e)];var a={};t[n.util.objId(e)]=a;for(var i in e)e.hasOwnProperty(i)&&(a[i]=n.util.clone(e[i],t));return a;case\"Array\":if(t[n.util.objId(e)])return t[n.util.objId(e)];var a=[];return t[n.util.objId(e)]=a,e.forEach(function(e,r){a[r]=n.util.clone(e,t)}),a}return e}},languages:{extend:function(e,t){var r=n.util.clone(n.languages[e]);for(var a in t)r[a]=t[a];return r},insertBefore:function(e,t,r,a){a=a||n.languages;var i=a[e];if(2==arguments.length){r=arguments[1];for(var l in r)r.hasOwnProperty(l)&&(i[l]=r[l]);return i}var o={};for(var s in i)if(i.hasOwnProperty(s)){if(s==t)for(var l in r)r.hasOwnProperty(l)&&(o[l]=r[l]);o[s]=i[s]}return n.languages.DFS(n.languages,function(t,n){n===a[e]&&t!=e&&(this[t]=o)}),a[e]=o},DFS:function(e,t,r,a){a=a||{};for(var i in e)e.hasOwnProperty(i)&&(t.call(e,i,e[i],r||i),\"Object\"!==n.util.type(e[i])||a[n.util.objId(e[i])]?\"Array\"!==n.util.type(e[i])||a[n.util.objId(e[i])]||(a[n.util.objId(e[i])]=!0,n.languages.DFS(e[i],t,i,a)):(a[n.util.objId(e[i])]=!0,n.languages.DFS(e[i],t,null,a)))}},plugins:{},highlightAll:function(e,t){n.highlightAllUnder(document,e,t)},highlightAllUnder:function(e,t,r){var a={callback:r,selector:'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'};n.hooks.run(\"before-highlightall\",a);for(var i,l=a.elements||e.querySelectorAll(a.selector),o=0;i=l[o++];)n.highlightElement(i,t===!0,a.callback)},highlightElement:function(t,r,a){for(var i,l,o=t;o&&!e.test(o.className);)o=o.parentNode;o&&(i=(o.className.match(e)||[,\"\"])[1].toLowerCase(),l=n.languages[i]),t.className=t.className.replace(e,\"\").replace(/\\s+/g,\" \")+\" language-\"+i,t.parentNode&&(o=t.parentNode,/pre/i.test(o.nodeName)&&(o.className=o.className.replace(e,\"\").replace(/\\s+/g,\" \")+\" language-\"+i));var s=t.textContent,u={element:t,language:i,grammar:l,code:s};if(n.hooks.run(\"before-sanity-check\",u),!u.code||!u.grammar)return u.code&&(n.hooks.run(\"before-highlight\",u),u.element.textContent=u.code,n.hooks.run(\"after-highlight\",u)),n.hooks.run(\"complete\",u),void 0;if(n.hooks.run(\"before-highlight\",u),r&&_self.Worker){var g=new Worker(n.filename);g.onmessage=function(e){u.highlightedCode=e.data,n.hooks.run(\"before-insert\",u),u.element.innerHTML=u.highlightedCode,a&&a.call(u.element),n.hooks.run(\"after-highlight\",u),n.hooks.run(\"complete\",u)},g.postMessage(JSON.stringify({language:u.language,code:u.code,immediateClose:!0}))}else u.highlightedCode=n.highlight(u.code,u.grammar,u.language),n.hooks.run(\"before-insert\",u),u.element.innerHTML=u.highlightedCode,a&&a.call(t),n.hooks.run(\"after-highlight\",u),n.hooks.run(\"complete\",u)},highlight:function(e,t,a){var i=n.tokenize(e,t);return r.stringify(n.util.encode(i),a)},matchGrammar:function(e,t,r,a,i,l,o){var s=n.Token;for(var u in r)if(r.hasOwnProperty(u)&&r[u]){if(u==o)return;var g=r[u];g=\"Array\"===n.util.type(g)?g:[g];for(var c=0;c<g.length;++c){var h=g[c],f=h.inside,d=!!h.lookbehind,m=!!h.greedy,p=0,y=h.alias;if(m&&!h.pattern.global){var v=h.pattern.toString().match(/[imuy]*$/)[0];h.pattern=RegExp(h.pattern.source,v+\"g\")}h=h.pattern||h;for(var b=a,k=i;b<t.length;k+=t[b].length,++b){var w=t[b];if(t.length>e.length)return;if(!(w instanceof s)){h.lastIndex=0;var _=h.exec(w),j=1;if(!_&&m&&b!=t.length-1){if(h.lastIndex=k,_=h.exec(e),!_)break;for(var P=_.index+(d?_[1].length:0),A=_.index+_[0].length,x=b,O=k,I=t.length;I>x&&(A>O||!t[x].type&&!t[x-1].greedy);++x)O+=t[x].length,P>=O&&(++b,k=O);if(t[b]instanceof s||t[x-1].greedy)continue;j=x-b,w=e.slice(k,O),_.index-=k}if(_){d&&(p=_[1]?_[1].length:0);var P=_.index+p,_=_[0].slice(p),A=P+_.length,N=w.slice(0,P),S=w.slice(A),C=[b,j];N&&(++b,k+=N.length,C.push(N));var E=new s(u,f?n.tokenize(_,f):_,y,_,m);if(C.push(E),S&&C.push(S),Array.prototype.splice.apply(t,C),1!=j&&n.matchGrammar(e,t,r,b,k,!0,u),l)break}else if(l)break}}}}},tokenize:function(e,t){var r=[e],a=t.rest;if(a){for(var i in a)t[i]=a[i];delete t.rest}return n.matchGrammar(e,r,t,0,0,!1),r},hooks:{all:{},add:function(e,t){var r=n.hooks.all;r[e]=r[e]||[],r[e].push(t)},run:function(e,t){var r=n.hooks.all[e];if(r&&r.length)for(var a,i=0;a=r[i++];)a(t)}}},r=n.Token=function(e,t,n,r,a){this.type=e,this.content=t,this.alias=n,this.length=0|(r||\"\").length,this.greedy=!!a};if(r.stringify=function(e,t,a){if(\"string\"==typeof e)return e;if(\"Array\"===n.util.type(e))return e.map(function(n){return r.stringify(n,t,e)}).join(\"\");var i={type:e.type,content:r.stringify(e.content,t,a),tag:\"span\",classes:[\"token\",e.type],attributes:{},language:t,parent:a};if(e.alias){var l=\"Array\"===n.util.type(e.alias)?e.alias:[e.alias];Array.prototype.push.apply(i.classes,l)}n.hooks.run(\"wrap\",i);var o=Object.keys(i.attributes).map(function(e){return e+'=\"'+(i.attributes[e]||\"\").replace(/\"/g,\"&quot;\")+'\"'}).join(\" \");return\"<\"+i.tag+' class=\"'+i.classes.join(\" \")+'\"'+(o?\" \"+o:\"\")+\">\"+i.content+\"</\"+i.tag+\">\"},!_self.document)return _self.addEventListener?(n.disableWorkerMessageHandler||_self.addEventListener(\"message\",function(e){var t=JSON.parse(e.data),r=t.language,a=t.code,i=t.immediateClose;_self.postMessage(n.highlight(a,n.languages[r],r)),i&&_self.close()},!1),_self.Prism):_self.Prism;var a=document.currentScript||[].slice.call(document.getElementsByTagName(\"script\")).pop();return a&&(n.filename=a.src,n.manual||a.hasAttribute(\"data-manual\")||(\"loading\"!==document.readyState?window.requestAnimationFrame?window.requestAnimationFrame(n.highlightAll):window.setTimeout(n.highlightAll,16):document.addEventListener(\"DOMContentLoaded\",n.highlightAll))),_self.Prism}();\"undefined\"!=typeof module&&module.exports&&(module.exports=Prism),\"undefined\"!=typeof global&&(global.Prism=Prism);\nPrism.languages.markup={comment:/<!--[\\s\\S]*?-->/,prolog:/<\\?[\\s\\S]+?\\?>/,doctype:/<!DOCTYPE[\\s\\S]+?>/i,cdata:/<!\\[CDATA\\[[\\s\\S]*?]]>/i,tag:{pattern:/<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i,inside:{tag:{pattern:/^<\\/?[^\\s>\\/]+/i,inside:{punctuation:/^<\\/?/,namespace:/^[^\\s>\\/:]+:/}},\"attr-value\":{pattern:/=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/i,inside:{punctuation:[/^=/,{pattern:/(^|[^\\\\])[\"']/,lookbehind:!0}]}},punctuation:/\\/?>/,\"attr-name\":{pattern:/[^\\s>\\/]+/,inside:{namespace:/^[^\\s>\\/:]+:/}}}},entity:/&#?[\\da-z]{1,8};/i},Prism.languages.markup.tag.inside[\"attr-value\"].inside.entity=Prism.languages.markup.entity,Prism.hooks.add(\"wrap\",function(a){\"entity\"===a.type&&(a.attributes.title=a.content.replace(/&amp;/,\"&\"))}),Prism.languages.xml=Prism.languages.markup,Prism.languages.html=Prism.languages.markup,Prism.languages.mathml=Prism.languages.markup,Prism.languages.svg=Prism.languages.markup;\nPrism.languages.clike={comment:[{pattern:/(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,lookbehind:!0},{pattern:/(^|[^\\\\:])\\/\\/.*/,lookbehind:!0}],string:{pattern:/([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0},\"class-name\":{pattern:/((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[\\w.\\\\]+/i,lookbehind:!0,inside:{punctuation:/[.\\\\]/}},keyword:/\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\"boolean\":/\\b(?:true|false)\\b/,\"function\":/[a-z0-9_]+(?=\\()/i,number:/\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,operator:/--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,punctuation:/[{}[\\];(),.:]/};\nPrism.languages.javascript=Prism.languages.extend(\"clike\",{keyword:/\\b(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\\b/,number:/\\b(?:0[xX][\\dA-Fa-f]+|0[bB][01]+|0[oO][0-7]+|NaN|Infinity)\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\"function\":/[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*\\()/i,operator:/-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/}),Prism.languages.insertBefore(\"javascript\",\"keyword\",{regex:{pattern:/(^|[^\\/])\\/(?!\\/)(\\[[^\\]\\r\\n]+]|\\\\.|[^\\/\\\\\\[\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})]))/,lookbehind:!0,greedy:!0},\"function-variable\":{pattern:/[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)|[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/i,alias:\"function\"}}),Prism.languages.insertBefore(\"javascript\",\"string\",{\"template-string\":{pattern:/`(?:\\\\[\\s\\S]|[^\\\\`])*`/,greedy:!0,inside:{interpolation:{pattern:/\\$\\{[^}]+\\}/,inside:{\"interpolation-punctuation\":{pattern:/^\\$\\{|\\}$/,alias:\"punctuation\"},rest:Prism.languages.javascript}},string:/[\\s\\S]+/}}}),Prism.languages.markup&&Prism.languages.insertBefore(\"markup\",\"tag\",{script:{pattern:/(<script[\\s\\S]*?>)[\\s\\S]*?(?=<\\/script>)/i,lookbehind:!0,inside:Prism.languages.javascript,alias:\"language-javascript\",greedy:!0}}),Prism.languages.js=Prism.languages.javascript;\nPrism.languages.c=Prism.languages.extend(\"clike\",{keyword:/\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\\b/,operator:/-[>-]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/]/,number:/(?:\\b0x[\\da-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]*/i}),Prism.languages.insertBefore(\"c\",\"string\",{macro:{pattern:/(^\\s*)#\\s*[a-z]+(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n|[\\s\\S]))*/im,lookbehind:!0,alias:\"property\",inside:{string:{pattern:/(#\\s*include\\s*)(?:<.+?>|(\"|')(?:\\\\?.)+?\\2)/,lookbehind:!0},directive:{pattern:/(#\\s*)\\b(?:define|defined|elif|else|endif|error|ifdef|ifndef|if|import|include|line|pragma|undef|using)\\b/,lookbehind:!0,alias:\"keyword\"}}},constant:/\\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\\b/}),delete Prism.languages.c[\"class-name\"],delete Prism.languages.c[\"boolean\"];\n!function(e){var t={variable:[{pattern:/\\$?\\(\\([\\s\\S]+?\\)\\)/,inside:{variable:[{pattern:/(^\\$\\(\\([\\s\\S]+)\\)\\)/,lookbehind:!0},/^\\$\\(\\(/],number:/\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,operator:/--?|-=|\\+\\+?|\\+=|!=?|~|\\*\\*?|\\*=|\\/=?|%=?|<<=?|>>=?|<=?|>=?|==?|&&?|&=|\\^=?|\\|\\|?|\\|=|\\?|:/,punctuation:/\\(\\(?|\\)\\)?|,|;/}},{pattern:/\\$\\([^)]+\\)|`[^`]+`/,greedy:!0,inside:{variable:/^\\$\\(|^`|\\)$|`$/}},/\\$(?:[\\w#?*!@]+|\\{[^}]+\\})/i]};e.languages.bash={shebang:{pattern:/^#!\\s*\\/bin\\/bash|^#!\\s*\\/bin\\/sh/,alias:\"important\"},comment:{pattern:/(^|[^\"{\\\\])#.*/,lookbehind:!0},string:[{pattern:/((?:^|[^<])<<\\s*)[\"']?(\\w+?)[\"']?\\s*\\r?\\n(?:[\\s\\S])*?\\r?\\n\\2/,lookbehind:!0,greedy:!0,inside:t},{pattern:/([\"'])(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|`[^`]+`|(?!\\1)[^\\\\])*\\1/,greedy:!0,inside:t}],variable:t.variable,\"function\":{pattern:/(^|[\\s;|&])(?:alias|apropos|apt-get|aptitude|aspell|awk|basename|bash|bc|bg|builtin|bzip2|cal|cat|cd|cfdisk|chgrp|chmod|chown|chroot|chkconfig|cksum|clear|cmp|comm|command|cp|cron|crontab|csplit|cut|date|dc|dd|ddrescue|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|enable|env|ethtool|eval|exec|expand|expect|export|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|getopts|git|grep|groupadd|groupdel|groupmod|groups|gzip|hash|head|help|hg|history|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|jobs|join|kill|killall|less|link|ln|locate|logname|logout|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|make|man|mkdir|mkfifo|mkisofs|mknod|more|most|mount|mtools|mtr|mv|mmv|nano|netstat|nice|nl|nohup|notify-send|npm|nslookup|open|op|passwd|paste|pathchk|ping|pkill|popd|pr|printcap|printenv|printf|ps|pushd|pv|pwd|quota|quotacheck|quotactl|ram|rar|rcp|read|readarray|readonly|reboot|rename|renice|remsync|rev|rm|rmdir|rsync|screen|scp|sdiff|sed|seq|service|sftp|shift|shopt|shutdown|sleep|slocate|sort|source|split|ssh|stat|strace|su|sudo|sum|suspend|sync|tail|tar|tee|test|time|timeout|times|touch|top|traceroute|trap|tr|tsort|tty|type|ulimit|umask|umount|unalias|uname|unexpand|uniq|units|unrar|unshar|uptime|useradd|userdel|usermod|users|uuencode|uudecode|v|vdir|vi|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yes|zip)(?=$|[\\s;|&])/,lookbehind:!0},keyword:{pattern:/(^|[\\s;|&])(?:let|:|\\.|if|then|else|elif|fi|for|break|continue|while|in|case|function|select|do|done|until|echo|exit|return|set|declare)(?=$|[\\s;|&])/,lookbehind:!0},\"boolean\":{pattern:/(^|[\\s;|&])(?:true|false)(?=$|[\\s;|&])/,lookbehind:!0},operator:/&&?|\\|\\|?|==?|!=?|<<<?|>>|<=?|>=?|=~/,punctuation:/\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];]/};var a=t.variable[1].inside;a.string=e.languages.bash.string,a[\"function\"]=e.languages.bash[\"function\"],a.keyword=e.languages.bash.keyword,a.boolean=e.languages.bash.boolean,a.operator=e.languages.bash.operator,a.punctuation=e.languages.bash.punctuation,e.languages.shell=e.languages.bash}(Prism);\nPrism.languages.cpp=Prism.languages.extend(\"c\",{keyword:/\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|class|compl|const|constexpr|const_cast|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/,\"boolean\":/\\b(?:true|false)\\b/,operator:/--?|\\+\\+?|!=?|<{1,2}=?|>{1,2}=?|->|:{1,2}|={1,2}|\\^|~|%|&{1,2}|\\|\\|?|\\?|\\*|\\/|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/}),Prism.languages.insertBefore(\"cpp\",\"keyword\",{\"class-name\":{pattern:/(class\\s+)\\w+/i,lookbehind:!0}}),Prism.languages.insertBefore(\"cpp\",\"string\",{\"raw-string\":{pattern:/R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,alias:\"string\",greedy:!0}});\nPrism.languages.csharp=Prism.languages.extend(\"clike\",{keyword:/\\b(?:abstract|add|alias|as|ascending|async|await|base|bool|break|byte|case|catch|char|checked|class|const|continue|decimal|default|delegate|descending|do|double|dynamic|else|enum|event|explicit|extern|false|finally|fixed|float|for|foreach|from|get|global|goto|group|if|implicit|in|int|interface|internal|into|is|join|let|lock|long|namespace|new|null|object|operator|orderby|out|override|params|partial|private|protected|public|readonly|ref|remove|return|sbyte|sealed|select|set|short|sizeof|stackalloc|static|string|struct|switch|this|throw|true|try|typeof|uint|ulong|unchecked|unsafe|ushort|using|value|var|virtual|void|volatile|where|while|yield)\\b/,string:[{pattern:/@(\"|')(?:\\1\\1|\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,greedy:!0},{pattern:/(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*?\\1/,greedy:!0}],number:/\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)f?/i}),Prism.languages.insertBefore(\"csharp\",\"keyword\",{\"generic-method\":{pattern:/[a-z0-9_]+\\s*<[^>\\r\\n]+?>\\s*(?=\\()/i,alias:\"function\",inside:{keyword:Prism.languages.csharp.keyword,punctuation:/[<>(),.:]/}},preprocessor:{pattern:/(^\\s*)#.*/m,lookbehind:!0,alias:\"property\",inside:{directive:{pattern:/(\\s*#)\\b(?:define|elif|else|endif|endregion|error|if|line|pragma|region|undef|warning)\\b/,lookbehind:!0,alias:\"keyword\"}}}}),Prism.languages.dotnet=Prism.languages.csharp;\n!function(e){e.languages.ruby=e.languages.extend(\"clike\",{comment:[/#(?!\\{[^\\r\\n]*?\\}).*/,/^=begin(?:\\r?\\n|\\r)(?:.*(?:\\r?\\n|\\r))*?=end/m],keyword:/\\b(?:alias|and|BEGIN|begin|break|case|class|def|define_method|defined|do|each|else|elsif|END|end|ensure|false|for|if|in|module|new|next|nil|not|or|protected|private|public|raise|redo|require|rescue|retry|return|self|super|then|throw|true|undef|unless|until|when|while|yield)\\b/});var n={pattern:/#\\{[^}]+\\}/,inside:{delimiter:{pattern:/^#\\{|\\}$/,alias:\"tag\"},rest:e.languages.ruby}};e.languages.insertBefore(\"ruby\",\"keyword\",{regex:[{pattern:/%r([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[gim]{0,3}/,greedy:!0,inside:{interpolation:n}},{pattern:/%r\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[gim]{0,3}/,greedy:!0,inside:{interpolation:n}},{pattern:/%r\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}[gim]{0,3}/,greedy:!0,inside:{interpolation:n}},{pattern:/%r\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\][gim]{0,3}/,greedy:!0,inside:{interpolation:n}},{pattern:/%r<(?:[^<>\\\\]|\\\\[\\s\\S])*>[gim]{0,3}/,greedy:!0,inside:{interpolation:n}},{pattern:/(^|[^\\/])\\/(?!\\/)(\\[.+?]|\\\\.|[^\\/\\\\\\r\\n])+\\/[gim]{0,3}(?=\\s*($|[\\r\\n,.;})]))/,lookbehind:!0,greedy:!0}],variable:/[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,symbol:{pattern:/(^|[^:]):[a-zA-Z_]\\w*(?:[?!]|\\b)/,lookbehind:!0}}),e.languages.insertBefore(\"ruby\",\"number\",{builtin:/\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Stat|Fixnum|Float|Hash|Integer|IO|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|String|Struct|TMS|Symbol|ThreadGroup|Thread|Time|TrueClass)\\b/,constant:/\\b[A-Z]\\w*(?:[?!]|\\b)/}),e.languages.ruby.string=[{pattern:/%[qQiIwWxs]?([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,greedy:!0,inside:{interpolation:n}},{pattern:/%[qQiIwWxs]?\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/,greedy:!0,inside:{interpolation:n}},{pattern:/%[qQiIwWxs]?\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}/,greedy:!0,inside:{interpolation:n}},{pattern:/%[qQiIwWxs]?\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\]/,greedy:!0,inside:{interpolation:n}},{pattern:/%[qQiIwWxs]?<(?:[^<>\\\\]|\\\\[\\s\\S])*>/,greedy:!0,inside:{interpolation:n}},{pattern:/(\"|')(?:#\\{[^}]+\\}|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0,inside:{interpolation:n}}]}(Prism);\nPrism.languages.docker={keyword:{pattern:/(^\\s*)(?:ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|ONBUILD|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR)(?=\\s)/im,lookbehind:!0},string:/(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,comment:/#.*/,punctuation:/---|\\.\\.\\.|[:[\\]{}\\-,|>?]/},Prism.languages.dockerfile=Prism.languages.docker;\nPrism.languages.go=Prism.languages.extend(\"clike\",{keyword:/\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,builtin:/\\b(?:bool|byte|complex(?:64|128)|error|float(?:32|64)|rune|string|u?int(?:8|16|32|64)?|uintptr|append|cap|close|complex|copy|delete|imag|len|make|new|panic|print(?:ln)?|real|recover)\\b/,\"boolean\":/\\b(?:_|iota|nil|true|false)\\b/,operator:/[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,number:/(?:\\b0x[a-f\\d]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[-+]?\\d+)?)i?/i,string:{pattern:/([\"'`])(\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,greedy:!0}}),delete Prism.languages.go[\"class-name\"];\nPrism.languages.json={property:/\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/i,string:{pattern:/\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,greedy:!0},number:/\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,punctuation:/[{}[\\]);,]/,operator:/:/g,\"boolean\":/\\b(?:true|false)\\b/i,\"null\":/\\bnull\\b/i},Prism.languages.jsonp=Prism.languages.json;\nPrism.languages.makefile={comment:{pattern:/(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,lookbehind:!0},string:{pattern:/([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0},builtin:/\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,symbol:{pattern:/^[^:=\\r\\n]+(?=\\s*:(?!=))/m,inside:{variable:/\\$+(?:[^(){}:#=\\s]+|(?=[({]))/}},variable:/\\$+(?:[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,keyword:[/-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/,{pattern:/(\\()(?:addsuffix|abspath|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:s|list)?)(?=[ \\t])/,lookbehind:!0}],operator:/(?:::|[?:+!])?=|[|@]/,punctuation:/[:;(){}]/};\nPrism.languages.markdown=Prism.languages.extend(\"markup\",{}),Prism.languages.insertBefore(\"markdown\",\"prolog\",{blockquote:{pattern:/^>(?:[\\t ]*>)*/m,alias:\"punctuation\"},code:[{pattern:/^(?: {4}|\\t).+/m,alias:\"keyword\"},{pattern:/``.+?``|`[^`\\n]+`/,alias:\"keyword\"}],title:[{pattern:/\\w+.*(?:\\r?\\n|\\r)(?:==+|--+)/,alias:\"important\",inside:{punctuation:/==+$|--+$/}},{pattern:/(^\\s*)#+.+/m,lookbehind:!0,alias:\"important\",inside:{punctuation:/^#+|#+$/}}],hr:{pattern:/(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,lookbehind:!0,alias:\"punctuation\"},list:{pattern:/(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,lookbehind:!0,alias:\"punctuation\"},\"url-reference\":{pattern:/!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,inside:{variable:{pattern:/^(!?\\[)[^\\]]+/,lookbehind:!0},string:/(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,punctuation:/^[\\[\\]!:]|[<>]/},alias:\"url\"},bold:{pattern:/(^|[^\\\\])(\\*\\*|__)(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,lookbehind:!0,inside:{punctuation:/^\\*\\*|^__|\\*\\*$|__$/}},italic:{pattern:/(^|[^\\\\])([*_])(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,lookbehind:!0,inside:{punctuation:/^[*_]|[*_]$/}},url:{pattern:/!?\\[[^\\]]+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)| ?\\[[^\\]\\n]*\\])/,inside:{variable:{pattern:/(!?\\[)[^\\]]+(?=\\]$)/,lookbehind:!0},string:{pattern:/\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/}}}}),Prism.languages.markdown.bold.inside.url=Prism.languages.markdown.url,Prism.languages.markdown.italic.inside.url=Prism.languages.markdown.url,Prism.languages.markdown.bold.inside.italic=Prism.languages.markdown.italic,Prism.languages.markdown.italic.inside.bold=Prism.languages.markdown.bold;\nPrism.languages.properties={comment:/^[ \\t]*[#!].*$/m,\"attr-value\":{pattern:/(^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+?(?: *[=:] *| ))(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])+/m,lookbehind:!0},\"attr-name\":/^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+?(?= *[=:] *| )/m,punctuation:/[=:]/};\nPrism.languages.python={comment:{pattern:/(^|[^\\\\])#.*/,lookbehind:!0},\"triple-quoted-string\":{pattern:/(\"\"\"|''')[\\s\\S]+?\\1/,greedy:!0,alias:\"string\"},string:{pattern:/(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0},\"function\":{pattern:/((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,lookbehind:!0},\"class-name\":{pattern:/(\\bclass\\s+)\\w+/i,lookbehind:!0},keyword:/\\b(?:as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|pass|print|raise|return|try|while|with|yield)\\b/,builtin:/\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\"boolean\":/\\b(?:True|False|None)\\b/,number:/(?:\\b(?=\\d)|\\B(?=\\.))(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*\\.?\\d*|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,operator:/[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not)\\b/,punctuation:/[{}[\\];(),.:]/};\nPrism.languages.vim={string:/\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\r\\n]|'')*'/,comment:/\".*/,\"function\":/\\w+(?=\\()/,keyword:/\\b(?:ab|abbreviate|abc|abclear|abo|aboveleft|al|all|arga|argadd|argd|argdelete|argdo|arge|argedit|argg|argglobal|argl|arglocal|ar|args|argu|argument|as|ascii|bad|badd|ba|ball|bd|bdelete|be|bel|belowright|bf|bfirst|bl|blast|bm|bmodified|bn|bnext|bN|bNext|bo|botright|bp|bprevious|brea|break|breaka|breakadd|breakd|breakdel|breakl|breaklist|br|brewind|bro|browse|bufdo|b|buffer|buffers|bun|bunload|bw|bwipeout|ca|cabbrev|cabc|cabclear|caddb|caddbuffer|cad|caddexpr|caddf|caddfile|cal|call|cat|catch|cb|cbuffer|cc|ccl|cclose|cd|ce|center|cex|cexpr|cf|cfile|cfir|cfirst|cgetb|cgetbuffer|cgete|cgetexpr|cg|cgetfile|c|change|changes|chd|chdir|che|checkpath|checkt|checktime|cla|clast|cl|clist|clo|close|cmapc|cmapclear|cnew|cnewer|cn|cnext|cN|cNext|cnf|cnfile|cNfcNfile|cnorea|cnoreabbrev|col|colder|colo|colorscheme|comc|comclear|comp|compiler|conf|confirm|con|continue|cope|copen|co|copy|cpf|cpfile|cp|cprevious|cq|cquit|cr|crewind|cuna|cunabbrev|cu|cunmap|cw|cwindow|debugg|debuggreedy|delc|delcommand|d|delete|delf|delfunction|delm|delmarks|diffg|diffget|diffoff|diffpatch|diffpu|diffput|diffsplit|diffthis|diffu|diffupdate|dig|digraphs|di|display|dj|djump|dl|dlist|dr|drop|ds|dsearch|dsp|dsplit|earlier|echoe|echoerr|echom|echomsg|echon|e|edit|el|else|elsei|elseif|em|emenu|endfo|endfor|endf|endfunction|endfun|en|endif|endt|endtry|endw|endwhile|ene|enew|ex|exi|exit|exu|exusage|f|file|files|filetype|fina|finally|fin|find|fini|finish|fir|first|fix|fixdel|fo|fold|foldc|foldclose|folddoc|folddoclosed|foldd|folddoopen|foldo|foldopen|for|fu|fun|function|go|goto|gr|grep|grepa|grepadd|ha|hardcopy|h|help|helpf|helpfind|helpg|helpgrep|helpt|helptags|hid|hide|his|history|ia|iabbrev|iabc|iabclear|if|ij|ijump|il|ilist|imapc|imapclear|in|inorea|inoreabbrev|isearch|isp|isplit|iuna|iunabbrev|iu|iunmap|j|join|ju|jumps|k|keepalt|keepj|keepjumps|kee|keepmarks|laddb|laddbuffer|lad|laddexpr|laddf|laddfile|lan|language|la|last|later|lb|lbuffer|lc|lcd|lch|lchdir|lcl|lclose|let|left|lefta|leftabove|lex|lexpr|lf|lfile|lfir|lfirst|lgetb|lgetbuffer|lgete|lgetexpr|lg|lgetfile|lgr|lgrep|lgrepa|lgrepadd|lh|lhelpgrep|l|list|ll|lla|llast|lli|llist|lmak|lmake|lm|lmap|lmapc|lmapclear|lnew|lnewer|lne|lnext|lN|lNext|lnf|lnfile|lNf|lNfile|ln|lnoremap|lo|loadview|loc|lockmarks|lockv|lockvar|lol|lolder|lop|lopen|lpf|lpfile|lp|lprevious|lr|lrewind|ls|lt|ltag|lu|lunmap|lv|lvimgrep|lvimgrepa|lvimgrepadd|lw|lwindow|mak|make|ma|mark|marks|mat|match|menut|menutranslate|mk|mkexrc|mks|mksession|mksp|mkspell|mkvie|mkview|mkv|mkvimrc|mod|mode|m|move|mzf|mzfile|mz|mzscheme|nbkey|new|n|next|N|Next|nmapc|nmapclear|noh|nohlsearch|norea|noreabbrev|nu|number|nun|nunmap|omapc|omapclear|on|only|o|open|opt|options|ou|ounmap|pc|pclose|ped|pedit|pe|perl|perld|perldo|po|pop|popu|popup|pp|ppop|pre|preserve|prev|previous|p|print|P|Print|profd|profdel|prof|profile|promptf|promptfind|promptr|promptrepl|ps|psearch|pta|ptag|ptf|ptfirst|ptj|ptjump|ptl|ptlast|ptn|ptnext|ptN|ptNext|ptp|ptprevious|ptr|ptrewind|pts|ptselect|pu|put|pw|pwd|pyf|pyfile|py|python|qa|qall|q|quit|quita|quitall|r|read|rec|recover|redi|redir|red|redo|redr|redraw|redraws|redrawstatus|reg|registers|res|resize|ret|retab|retu|return|rew|rewind|ri|right|rightb|rightbelow|rub|ruby|rubyd|rubydo|rubyf|rubyfile|ru|runtime|rv|rviminfo|sal|sall|san|sandbox|sa|sargument|sav|saveas|sba|sball|sbf|sbfirst|sbl|sblast|sbm|sbmodified|sbn|sbnext|sbN|sbNext|sbp|sbprevious|sbr|sbrewind|sb|sbuffer|scripte|scriptencoding|scrip|scriptnames|se|set|setf|setfiletype|setg|setglobal|setl|setlocal|sf|sfind|sfir|sfirst|sh|shell|sign|sil|silent|sim|simalt|sla|slast|sl|sleep|sm|smagic|sm|smap|smapc|smapclear|sme|smenu|sn|snext|sN|sNext|sni|sniff|sno|snomagic|snor|snoremap|snoreme|snoremenu|sor|sort|so|source|spelld|spelldump|spe|spellgood|spelli|spellinfo|spellr|spellrepall|spellu|spellundo|spellw|spellwrong|sp|split|spr|sprevious|sre|srewind|sta|stag|startg|startgreplace|star|startinsert|startr|startreplace|stj|stjump|st|stop|stopi|stopinsert|sts|stselect|sun|sunhide|sunm|sunmap|sus|suspend|sv|sview|syncbind|t|tab|tabc|tabclose|tabd|tabdo|tabe|tabedit|tabf|tabfind|tabfir|tabfirst|tabl|tablast|tabm|tabmove|tabnew|tabn|tabnext|tabN|tabNext|tabo|tabonly|tabp|tabprevious|tabr|tabrewind|tabs|ta|tag|tags|tc|tcl|tcld|tcldo|tclf|tclfile|te|tearoff|tf|tfirst|th|throw|tj|tjump|tl|tlast|tm|tm|tmenu|tn|tnext|tN|tNext|to|topleft|tp|tprevious|tr|trewind|try|ts|tselect|tu|tu|tunmenu|una|unabbreviate|u|undo|undoj|undojoin|undol|undolist|unh|unhide|unlet|unlo|unlockvar|unm|unmap|up|update|verb|verbose|ve|version|vert|vertical|vie|view|vim|vimgrep|vimgrepa|vimgrepadd|vi|visual|viu|viusage|vmapc|vmapclear|vne|vnew|vs|vsplit|vu|vunmap|wa|wall|wh|while|winc|wincmd|windo|winp|winpos|win|winsize|wn|wnext|wN|wNext|wp|wprevious|wq|wqa|wqall|w|write|ws|wsverb|wv|wviminfo|X|xa|xall|x|xit|xm|xmap|xmapc|xmapclear|xme|xmenu|XMLent|XMLns|xn|xnoremap|xnoreme|xnoremenu|xu|xunmap|y|yank)\\b/,builtin:/\\b(?:autocmd|acd|ai|akm|aleph|allowrevins|altkeymap|ambiwidth|ambw|anti|antialias|arab|arabic|arabicshape|ari|arshape|autochdir|autoindent|autoread|autowrite|autowriteall|aw|awa|background|backspace|backup|backupcopy|backupdir|backupext|backupskip|balloondelay|ballooneval|balloonexpr|bdir|bdlay|beval|bex|bexpr|bg|bh|bin|binary|biosk|bioskey|bk|bkc|bomb|breakat|brk|browsedir|bs|bsdir|bsk|bt|bufhidden|buflisted|buftype|casemap|ccv|cdpath|cedit|cfu|ch|charconvert|ci|cin|cindent|cink|cinkeys|cino|cinoptions|cinw|cinwords|clipboard|cmdheight|cmdwinheight|cmp|cms|columns|com|comments|commentstring|compatible|complete|completefunc|completeopt|consk|conskey|copyindent|cot|cpo|cpoptions|cpt|cscopepathcomp|cscopeprg|cscopequickfix|cscopetag|cscopetagorder|cscopeverbose|cspc|csprg|csqf|cst|csto|csverb|cuc|cul|cursorcolumn|cursorline|cwh|debug|deco|def|define|delcombine|dex|dg|dict|dictionary|diff|diffexpr|diffopt|digraph|dip|dir|directory|dy|ea|ead|eadirection|eb|ed|edcompatible|ef|efm|ei|ek|enc|encoding|endofline|eol|ep|equalalways|equalprg|errorbells|errorfile|errorformat|esckeys|et|eventignore|expandtab|exrc|fcl|fcs|fdc|fde|fdi|fdl|fdls|fdm|fdn|fdo|fdt|fen|fenc|fencs|fex|ff|ffs|fileencoding|fileencodings|fileformat|fileformats|fillchars|fk|fkmap|flp|fml|fmr|foldcolumn|foldenable|foldexpr|foldignore|foldlevel|foldlevelstart|foldmarker|foldmethod|foldminlines|foldnestmax|foldtext|formatexpr|formatlistpat|formatoptions|formatprg|fp|fs|fsync|ft|gcr|gd|gdefault|gfm|gfn|gfs|gfw|ghr|gp|grepformat|grepprg|gtl|gtt|guicursor|guifont|guifontset|guifontwide|guiheadroom|guioptions|guipty|guitablabel|guitabtooltip|helpfile|helpheight|helplang|hf|hh|hi|hidden|highlight|hk|hkmap|hkmapp|hkp|hl|hlg|hls|hlsearch|ic|icon|iconstring|ignorecase|im|imactivatekey|imak|imc|imcmdline|imd|imdisable|imi|iminsert|ims|imsearch|inc|include|includeexpr|incsearch|inde|indentexpr|indentkeys|indk|inex|inf|infercase|insertmode|isf|isfname|isi|isident|isk|iskeyword|isprint|joinspaces|js|key|keymap|keymodel|keywordprg|km|kmp|kp|langmap|langmenu|laststatus|lazyredraw|lbr|lcs|linebreak|lines|linespace|lisp|lispwords|listchars|loadplugins|lpl|lsp|lz|macatsui|magic|makeef|makeprg|matchpairs|matchtime|maxcombine|maxfuncdepth|maxmapdepth|maxmem|maxmempattern|maxmemtot|mco|mef|menuitems|mfd|mh|mis|mkspellmem|ml|mls|mm|mmd|mmp|mmt|modeline|modelines|modifiable|modified|more|mouse|mousef|mousefocus|mousehide|mousem|mousemodel|mouses|mouseshape|mouset|mousetime|mp|mps|msm|mzq|mzquantum|nf|nrformats|numberwidth|nuw|odev|oft|ofu|omnifunc|opendevice|operatorfunc|opfunc|osfiletype|pa|para|paragraphs|paste|pastetoggle|patchexpr|patchmode|path|pdev|penc|pex|pexpr|pfn|ph|pheader|pi|pm|pmbcs|pmbfn|popt|preserveindent|previewheight|previewwindow|printdevice|printencoding|printexpr|printfont|printheader|printmbcharset|printmbfont|printoptions|prompt|pt|pumheight|pvh|pvw|qe|quoteescape|readonly|remap|report|restorescreen|revins|rightleft|rightleftcmd|rl|rlc|ro|rs|rtp|ruf|ruler|rulerformat|runtimepath|sbo|sc|scb|scr|scroll|scrollbind|scrolljump|scrolloff|scrollopt|scs|sect|sections|secure|sel|selection|selectmode|sessionoptions|sft|shcf|shellcmdflag|shellpipe|shellquote|shellredir|shellslash|shelltemp|shelltype|shellxquote|shiftround|shiftwidth|shm|shortmess|shortname|showbreak|showcmd|showfulltag|showmatch|showmode|showtabline|shq|si|sidescroll|sidescrolloff|siso|sj|slm|smartcase|smartindent|smarttab|smc|smd|softtabstop|sol|spc|spell|spellcapcheck|spellfile|spelllang|spellsuggest|spf|spl|splitbelow|splitright|sps|sr|srr|ss|ssl|ssop|stal|startofline|statusline|stl|stmp|su|sua|suffixes|suffixesadd|sw|swapfile|swapsync|swb|swf|switchbuf|sws|sxq|syn|synmaxcol|syntax|tabline|tabpagemax|tabstop|tagbsearch|taglength|tagrelative|tagstack|tal|tb|tbi|tbidi|tbis|tbs|tenc|term|termbidi|termencoding|terse|textauto|textmode|textwidth|tgst|thesaurus|tildeop|timeout|timeoutlen|title|titlelen|titleold|titlestring|toolbar|toolbariconsize|top|tpm|tsl|tsr|ttimeout|ttimeoutlen|ttm|tty|ttybuiltin|ttyfast|ttym|ttymouse|ttyscroll|ttytype|tw|tx|uc|ul|undolevels|updatecount|updatetime|ut|vb|vbs|vdir|verbosefile|vfile|viewdir|viewoptions|viminfo|virtualedit|visualbell|vop|wak|warn|wb|wc|wcm|wd|weirdinvert|wfh|wfw|whichwrap|wi|wig|wildchar|wildcharm|wildignore|wildmenu|wildmode|wildoptions|wim|winaltkeys|window|winfixheight|winfixwidth|winheight|winminheight|winminwidth|winwidth|wiv|wiw|wm|wmh|wmnu|wmw|wop|wrap|wrapmargin|wrapscan|writeany|writebackup|writedelay|ww|noacd|noai|noakm|noallowrevins|noaltkeymap|noanti|noantialias|noar|noarab|noarabic|noarabicshape|noari|noarshape|noautochdir|noautoindent|noautoread|noautowrite|noautowriteall|noaw|noawa|nobackup|noballooneval|nobeval|nobin|nobinary|nobiosk|nobioskey|nobk|nobl|nobomb|nobuflisted|nocf|noci|nocin|nocindent|nocompatible|noconfirm|noconsk|noconskey|nocopyindent|nocp|nocscopetag|nocscopeverbose|nocst|nocsverb|nocuc|nocul|nocursorcolumn|nocursorline|nodeco|nodelcombine|nodg|nodiff|nodigraph|nodisable|noea|noeb|noed|noedcompatible|noek|noendofline|noeol|noequalalways|noerrorbells|noesckeys|noet|noex|noexpandtab|noexrc|nofen|nofk|nofkmap|nofoldenable|nogd|nogdefault|noguipty|nohid|nohidden|nohk|nohkmap|nohkmapp|nohkp|nohls|noic|noicon|noignorecase|noim|noimc|noimcmdline|noimd|noincsearch|noinf|noinfercase|noinsertmode|nois|nojoinspaces|nojs|nolazyredraw|nolbr|nolinebreak|nolisp|nolist|noloadplugins|nolpl|nolz|noma|nomacatsui|nomagic|nomh|noml|nomod|nomodeline|nomodifiable|nomodified|nomore|nomousef|nomousefocus|nomousehide|nonu|nonumber|noodev|noopendevice|nopaste|nopi|nopreserveindent|nopreviewwindow|noprompt|nopvw|noreadonly|noremap|norestorescreen|norevins|nori|norightleft|norightleftcmd|norl|norlc|noro|nors|noru|noruler|nosb|nosc|noscb|noscrollbind|noscs|nosecure|nosft|noshellslash|noshelltemp|noshiftround|noshortname|noshowcmd|noshowfulltag|noshowmatch|noshowmode|nosi|nosm|nosmartcase|nosmartindent|nosmarttab|nosmd|nosn|nosol|nospell|nosplitbelow|nosplitright|nospr|nosr|nossl|nosta|nostartofline|nostmp|noswapfile|noswf|nota|notagbsearch|notagrelative|notagstack|notbi|notbidi|notbs|notermbidi|noterse|notextauto|notextmode|notf|notgst|notildeop|notimeout|notitle|noto|notop|notr|nottimeout|nottybuiltin|nottyfast|notx|novb|novisualbell|nowa|nowarn|nowb|noweirdinvert|nowfh|nowfw|nowildmenu|nowinfixheight|nowinfixwidth|nowiv|nowmnu|nowrap|nowrapscan|nowrite|nowriteany|nowritebackup|nows|invacd|invai|invakm|invallowrevins|invaltkeymap|invanti|invantialias|invar|invarab|invarabic|invarabicshape|invari|invarshape|invautochdir|invautoindent|invautoread|invautowrite|invautowriteall|invaw|invawa|invbackup|invballooneval|invbeval|invbin|invbinary|invbiosk|invbioskey|invbk|invbl|invbomb|invbuflisted|invcf|invci|invcin|invcindent|invcompatible|invconfirm|invconsk|invconskey|invcopyindent|invcp|invcscopetag|invcscopeverbose|invcst|invcsverb|invcuc|invcul|invcursorcolumn|invcursorline|invdeco|invdelcombine|invdg|invdiff|invdigraph|invdisable|invea|inveb|inved|invedcompatible|invek|invendofline|inveol|invequalalways|inverrorbells|invesckeys|invet|invex|invexpandtab|invexrc|invfen|invfk|invfkmap|invfoldenable|invgd|invgdefault|invguipty|invhid|invhidden|invhk|invhkmap|invhkmapp|invhkp|invhls|invhlsearch|invic|invicon|invignorecase|invim|invimc|invimcmdline|invimd|invincsearch|invinf|invinfercase|invinsertmode|invis|invjoinspaces|invjs|invlazyredraw|invlbr|invlinebreak|invlisp|invlist|invloadplugins|invlpl|invlz|invma|invmacatsui|invmagic|invmh|invml|invmod|invmodeline|invmodifiable|invmodified|invmore|invmousef|invmousefocus|invmousehide|invnu|invnumber|invodev|invopendevice|invpaste|invpi|invpreserveindent|invpreviewwindow|invprompt|invpvw|invreadonly|invremap|invrestorescreen|invrevins|invri|invrightleft|invrightleftcmd|invrl|invrlc|invro|invrs|invru|invruler|invsb|invsc|invscb|invscrollbind|invscs|invsecure|invsft|invshellslash|invshelltemp|invshiftround|invshortname|invshowcmd|invshowfulltag|invshowmatch|invshowmode|invsi|invsm|invsmartcase|invsmartindent|invsmarttab|invsmd|invsn|invsol|invspell|invsplitbelow|invsplitright|invspr|invsr|invssl|invsta|invstartofline|invstmp|invswapfile|invswf|invta|invtagbsearch|invtagrelative|invtagstack|invtbi|invtbidi|invtbs|invtermbidi|invterse|invtextauto|invtextmode|invtf|invtgst|invtildeop|invtimeout|invtitle|invto|invtop|invtr|invttimeout|invttybuiltin|invttyfast|invtx|invvb|invvisualbell|invwa|invwarn|invwb|invweirdinvert|invwfh|invwfw|invwildmenu|invwinfixheight|invwinfixwidth|invwiv|invwmnu|invwrap|invwrapscan|invwrite|invwriteany|invwritebackup|invws|t_AB|t_AF|t_al|t_AL|t_bc|t_cd|t_ce|t_Ce|t_cl|t_cm|t_Co|t_cs|t_Cs|t_CS|t_CV|t_da|t_db|t_dl|t_DL|t_EI|t_F1|t_F2|t_F3|t_F4|t_F5|t_F6|t_F7|t_F8|t_F9|t_fs|t_IE|t_IS|t_k1|t_K1|t_k2|t_k3|t_K3|t_k4|t_K4|t_k5|t_K5|t_k6|t_K6|t_k7|t_K7|t_k8|t_K8|t_k9|t_K9|t_KA|t_kb|t_kB|t_KB|t_KC|t_kd|t_kD|t_KD|t_ke|t_KE|t_KF|t_KG|t_kh|t_KH|t_kI|t_KI|t_KJ|t_KK|t_kl|t_KL|t_kN|t_kP|t_kr|t_ks|t_ku|t_le|t_mb|t_md|t_me|t_mr|t_ms|t_nd|t_op|t_RI|t_RV|t_Sb|t_se|t_Sf|t_SI|t_so|t_sr|t_te|t_ti|t_ts|t_ue|t_us|t_ut|t_vb|t_ve|t_vi|t_vs|t_WP|t_WS|t_xs|t_ZH|t_ZR)\\b/,number:/\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?)\\b/i,operator:/\\|\\||&&|[-+.]=?|[=!](?:[=~][#?]?)?|[<>]=?[#?]?|[*\\/%?]|\\b(?:is(?:not)?)\\b/,punctuation:/[{}[\\](),;:]/};\nPrism.languages.yaml={scalar:{pattern:/([\\-:]\\s*(?:![^\\s]+)?[ \\t]*[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)[^\\r\\n]+(?:\\2[^\\r\\n]+)*)/,lookbehind:!0,alias:\"string\"},comment:/#.*/,key:{pattern:/(\\s*(?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:![^\\s]+)?[ \\t]*)[^\\r\\n{[\\]},#\\s]+?(?=\\s*:\\s)/,lookbehind:!0,alias:\"atrule\"},directive:{pattern:/(^[ \\t]*)%.+/m,lookbehind:!0,alias:\"important\"},datetime:{pattern:/([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?)?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?)(?=[ \\t]*(?:$|,|]|}))/m,lookbehind:!0,alias:\"number\"},\"boolean\":{pattern:/([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:true|false)[ \\t]*(?=$|,|]|})/im,lookbehind:!0,alias:\"important\"},\"null\":{pattern:/([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:null|~)[ \\t]*(?=$|,|]|})/im,lookbehind:!0,alias:\"important\"},string:{pattern:/([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(\"|')(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2(?=[ \\t]*(?:$|,|]|}))/m,lookbehind:!0,greedy:!0},number:{pattern:/([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+\\.?\\d*|\\.?\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)[ \\t]*(?=$|,|]|})/im,lookbehind:!0},tag:/![^\\s]+/,important:/[&*][\\w]+/,punctuation:/---|[:[\\]{}\\-,|>?]|\\.\\.\\./};\n","/* eslint-env browser */\n\n/**\n * Nav/Title replacement\n * Used on invividual post pages, displays the post title in place of the nav\n * bar when scrolling past the title\n *\n * Usage:\n * ```\n * Casper.stickyTitle({\n *     navSelector: '.site-nav-main',\n *     titleSelector: '.post-full-title',\n *     activeClass: 'nav-post-title-active'\n * });\n * ```\n */\n\n(function (window, document) {\n    // set up Casper as a global object\n    if (!window.Casper) {\n        window.Casper = {};\n    }\n\n    window.Casper.stickyNavTitle = function stickyNavTitle(options) {\n        var nav = document.querySelector(options.navSelector);\n        var title = document.querySelector(options.titleSelector);\n\n        var lastScrollY = window.scrollY;\n        var ticking = false;\n\n        function onScroll() {\n            lastScrollY = window.scrollY;\n            requestTick();\n        }\n\n        function requestTick() {\n            if (!ticking) {\n                requestAnimationFrame(update);\n            }\n            ticking = true;\n        }\n\n        function update() {\n            var trigger = title.getBoundingClientRect().top + window.scrollY;\n            var triggerOffset = title.offsetHeight + 35;\n\n            // show/hide post title\n            if (lastScrollY >= trigger + triggerOffset) {\n                nav.classList.add(options.activeClass);\n            } else {\n                nav.classList.remove(options.activeClass);\n            }\n\n            ticking = false;\n        }\n\n        window.addEventListener('scroll', onScroll, {passive: true});\n\n        update();\n    };\n})(window, document);\n"]}